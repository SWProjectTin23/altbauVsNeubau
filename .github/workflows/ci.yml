# .github/workflows/test-docker-compose.yml

name: Docker Compose Service Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-services:
    runs-on: ubuntu-latest # Verwende einen GitHub-gehosteten Runner

    # Define environment variables for database credentials
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4 # Fetch code from the repository

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Set up Docker Buildx (for more efficient builds)

      - name: Build and Start Services (excluding github-runner)
        # Start services in the background and wait for their health checks to succeed.
        # The 'github-runner' service is explicitly not started here.
        run: |
          echo "Starting backend, frontend, and db services..."
          docker compose up -d backend frontend db --wait

          # Optional: Output the status of the services to verify they are running
          echo "Services status after startup:"
          docker compose ps

      - name: Test Backend Service
        # Perform a curl test on the backend health check endpoint.
        # The backend container is mapped to port 5001 of the host.
        run: |
          echo "Testing backend health endpoint: http://localhost:5001/health"
          curl -f http://localhost:5001/health
          echo "Backend health check successful!"

      - name: Test Frontend Service
        # Perform a curl test on the frontend endpoint.
        # The frontend container is mapped to port 3000 of the host.
        run: |
          echo "Testing frontend endpoint: http://localhost:3000"
          curl -f http://localhost:3000
          echo "Frontend service reachable!"

      - name: Clean up Docker Compose Services
        # Stop all services and remove networks and volumes.
        # This is important to free up resources.
        if: always() # Always run this step, even if previous steps fail
        run: |
          echo "Shutting down Docker Compose services..."
          docker compose down -v --remove-orphans
          echo "Services shut down."