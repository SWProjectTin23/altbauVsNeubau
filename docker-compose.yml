services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5000" # Exposes 5001 on the host, forwards to 5000 in the container
    environment:
      - FLASK_APP=app # This is sufficient if run.py calls create_app()
      - FLASK_RUN_HOST=0.0.0.0
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      # IMPORTANT: Health check inside the container must use the internal port (5000)
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      # IMPORTANT: Health check inside the container must use the internal port (3000)
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  db:
    image: timescale/timescaledb:latest-pg14
    environment:
      - POSTGRES_USER=${DB_USER}          
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${DB_USER} -d ${DB_NAME} -c 'SELECT 1;' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 60s # Longer start period for the database

volumes: # This section must be at the same level as 'services'
  db_data:
